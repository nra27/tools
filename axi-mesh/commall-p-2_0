C23456789012345678901234567890123456789012345678901234567890123456789012
C
C     NBLK   is the maximum number of blocks on any one processor.
C
C     NBLK_ALL  is the total number of blocks on ALL processors.
C
C     NPM    is the maximum number of mesh points on any one processor           
C     NIM    is the maximum number of "I" grid points in any block.
C     NJM    is the maximum number of "J" grid points in any block.
C     NKM    is the maximum number of "K" grid points in any block.
C     MAXDIM is the maximum of NIM, NJM, NKM.
C     MAXJK  is the maximum of NJM,NKM .
C     NPCH   is the maximum number of patches on any block.
C

      PARAMETER (NPM=500000,NBLK_ALL=219,NBLK=219,
     & NIM=10,NJM=10,NKM=10,
     & MAXDIM=10,NPCH=10,MAXJK=10)

C
C     NSECTIN  is the maximum number of blade geometry input sections that can be
C              used in "MULTIP" type input format.
C     NMATRIX  is the maximum of (1) The number of grid points on any interpolated
C              face when PATCH_TYPE = "N", or (2) The number of grid points on any
C              patch edge if using "GET_PATCH", OR  (3) the maximum number of grid 
C              input points used when "intype" = 0.
C     NIBLADE  is the maximum number of points on the blade surface at which 
C              the blade geometry can be input in  "MULTIP" type format.
C
      PARAMETER (NSECTIN=51,NMATRIX=1500,NIBLADE=250,NINBLOK=100)
C
C     NPFACE    is the maximum number of grid points on any face which is to be
C               matched by interpolation, i.e. when PATCH_TYPE = "N".
C     N_INTFACE is the maximum number of faces which can be matched by
C               interpolation. i.e. for which PATCH_TYPE = "N".
C     NINT_PTS  is the maximum number of points that can be used for three dimensional
C               interpolation on a face with PATCH_TYPE = "N"
    
      PARAMETER (NPFACE=5000,N_INTFACE=6,NINT_PTS=10)
C     
C
      COMMON/BKINTERP/
     & NBLKINT(N_INTFACE),NPCHINT(N_INTFACE),DISTSQRD(NPFACE),
     & INEXT(NPFACE),JNEXT(NPFACE),KNEXT(NPFACE),
     & NORDER(NPFACE),NEXTI(N_INTFACE,NPFACE,NINT_PTS),
     & NEXTJ(N_INTFACE,NPFACE,NINT_PTS),NINTFACE,
     & NEXTK(N_INTFACE,NPFACE,NINT_PTS),NPINTERP(NPCH,NBLK),
     & INT_TYPE(NPCH,NBLK)
C
      COMMON/BKSIZE/
     & NBLOCKS,NI(NBLK),NJ(NBLK),NK(NBLK),NPOINTS_TOT, 
     & NSMALL_BLOCK(NBLK),NBIG_BLOCK(NBLK),N_MIX_PLANE(NBLK) 
C
      COMMON/BKODDS/
     & PI,SFAC,DAMP,FACSEC,WROTBLK(NBLK),IFRESTART,IFCHECK,IFSTOP,
     & WROTI1(NBLK),WROTIM(NBLK),WROTJ1(NBLK),WROTJM(NBLK),
     & WROTK1(NBLK),WROTKM(NBLK),SFACIN,DAMPIN,FACSECIN,FLOWRAT,ETA_TT,
     & FLO_IN,FLO_OUT,IF_TRACE,IF_ADPT_SMOOTH
C
      COMMON/BKGAS/
     &  RGAS,GA,CP,CV,FGA,RFGA,GA1,GAMR,TSTAG_REF(NBLK),PSTAG_REF(NBLK),
     &  ROSTAT_REF(NBLK),
     &  IFGAS,CP1,CP2,CP3,CV1,TREF,HREF,
     &  HT1,HT2,HT3,HT4,
     &  ET1,ET2,ET3,ET4,EREF,
     &  ALPHA,R_ALPHA,BETA1,BETA2,BALPHA1,BALPHA2,
     &  EPS0,EPS1,EPS2,
     &  GAGAS,FGAGAS,GA1GAS

C
      COMMON/BKPRIM/
     & ROALL(NPM),ROEALL(NPM),
     & ROVXALL(NPM),ROVRALL(NPM),
     & RORVTALL(NPM),ROPHIALL(NPM)
C
      COMMON/BLKDELS/
     & DELROALL(NPM),DELROEALL(NPM),
     & DELROVXALL(NPM),DELROVRALL(NPM),
     & DELRORVTALL(NPM),DELROPHIALL(NPM)
C
      COMMON/BLKPRECON/
     & RO_FLUX_SUM(NIM,NJM,NKM),ROVX_FLUX_SUM(NIM,NJM,NKM),
     & ROVR_FLUX_SUM(NIM,NJM,NKM),RORVT_FLUX_SUM(NIM,NJM,NKM),
     & ROE_FLUX_SUM(NIM,NJM,NKM),
     & V_REF_PRECON(NPM), IF_PRECON(NBLK), IF_PRECON_ALL
C
      COMMON/BKFLUX/
     & FIMAS(NIM,NJM,NKM),FJMAS(NIM,NJM,NKM),FKMAS(NIM,NJM,NKM),
     & FLUXI(NIM,NJM,NKM),FLUXJ(NIM,NJM,NKM),FLUXK(NIM,NJM,NKM),
     & SOURCE(NIM,NJM,NKM),MWALLI1(NJM,NKM,NBLK),MWALLIM(NJM,NKM,NBLK),
     & MWALLJ1(NIM,NKM,NBLK),MWALLJM(NIM,NKM,NBLK),MWALLK1(NIM,NJM,NBLK)
     & ,MWALLKM(NIM,NJM,NBLK)
C
      COMMON/BKGRIDIN/
     & INTYPE(NBLK),NPINPUT(NBLK),EXPO(NBLK),
     & IGIN(NMATRIX,NBLK),JGIN(NMATRIX,NBLK),KGIN(NMATRIX,NBLK),
     & XGIN(NMATRIX,NBLK),RGIN(NMATRIX,NBLK),RTGIN(NMATRIX,NBLK),
     & SCALE(NBLK),XMOVE(NBLK),RMOVE(NBLK),RTMOVE(NBLK),
     & NSMOOTH(NBLK),NSMOOTHMAX,NMATCH_LOOP(NBLK),
     & IFISMTH(NBLK),IFJSMTH(NBLK),IFKSMTH(NBLK),
     & NBLOCKIN,NPASSAGE_IN(NBLK),IFDEFAULT(NPCH,NBLK)
C
      REAL IGIN,JGIN,KGIN
C
      COMMON/BKCORNERS/
     & XI1J1K1(NBLK),RI1J1K1(NBLK),RTI1J1K1(NBLK),XI1JMK1(NBLK),
     & RI1JMK1(NBLK),RTI1JMK1(NBLK),
     & XI1JMKM(NBLK),RI1JMKM(NBLK),RTI1JMKM(NBLK),XI1J1KM(NBLK),
     & RI1J1KM(NBLK),RTI1J1KM(NBLK),
     & XIMJ1K1(NBLK),RIMJ1K1(NBLK),RTIMJ1K1(NBLK),XIMJMK1(NBLK),
     & RIMJMK1(NBLK),RTIMJMK1(NBLK),
     & XIMJMKM(NBLK),RIMJMKM(NBLK),RTIMJMKM(NBLK),XIMJ1KM(NBLK),
     & RIMJ1KM(NBLK),RTIMJ1KM(NBLK)
C
      COMMON/BKSECTIONS/
     &  XINB(NSECTIN,NIBLADE,NBLK),
     &  RTINB(NSECTIN,NIBLADE,NBLK),DRTINB(NSECTIN,NIBLADE,NBLK),
     &  RINB(NSECTIN,NIBLADE,NBLK),FI(NIM,NBLK),FJ(NJM,NBLK),
     &  FK(NKM,NBLK),IF_IINT(NBLK),IM_IN(NBLK),ILE(NBLK),ITE(NBLK),
     &  NBLADES(NBLK),NOSECT(NBLK),NTIPGAP,NOBLADES(NPCH,NBLK),
     &  NSECTOR(NBLK)
C
      COMMON/BKCOORDS/
     & X(NPM),R(NPM),RT(NPM),
     & RBLK(NIM,NJM,NKM)
C
      COMMON/BKBCONDS/
     & POIN(NPCH,NJM,NBLK),TOIN(NPCH,NJM,NBLK),COSBXMER(NPCH,NJM,NBLK),
     & SINBXMER(NPCH,NJM,NBLK),COSBTMER(NPCH,NJM,NBLK),
     & SINBTMER(NPCH,NJM,NBLK),VTINLET(NPCH,NJM,NBLK),
     & PHI_IN(NPCH,NJM,NBLK),
     & POUT(NPCH,NJM,NBLK),RFINLET(NPCH,NBLK),INBC_TYPE,
     & IFRELIN(NPCH,NBLK),I_EXBCS(NPCH,NBLK),I_POUT(NPCH,NBLK),
     & FREFLECT(NPCH,NBLK),POFIXED(NPCH,NBLK),TOFIXED(NPCH,NBLK),
     & VXFIXED(NPCH,NBLK),VRFIXED(NPCH,NBLK),VTFIXED(NPCH,NBLK),
     & FTHROTTLE(NPCH,NBLK),ROVNORMSQ(NJM),PHI_PATCH(NPCH,NBLK)
C
      COMMON/BKPATCH/
     & FRACSHIFT(NPCH,NBLK),IPATCHS(NPCH,NBLK),IPATCHE(NPCH,NBLK),
     & JPATCHS(NPCH,NBLK),JPATCHE(NPCH,NBLK),KPATCHS(NPCH,NBLK),
     & KPATCHE(NPCH,NBLK),NEXT_BLOCK(NPCH,NBLK),NEXT_PATCH(NPCH,NBLK),
     & MATCH_TYPE(NPCH,NBLK),NMATCH_ON(NPCH,NBLK),
     & NMATCH_OFF(NPCH,NBLK),IFPSMOOTH(NPCH,NBLK),IFDONE(NPCH,NBLK),
     & NPATCH(NBLK),NEXT_I(NPCH,NBLK),NEXT_J(NPCH,NBLK),
     & NEXT_K(NPCH,NBLK),PATCHTYPE(NPCH,NBLK),
     & BLEED_FLUX(MAXJK,MAXJK,NPCH,NBLK),BLEED_MAS(NPCH,NBLK),
     & NBLEED(NBLK)
C
      COMMON/PATGRID/
     & NPATCHIN(NPCH,NBLK),EXPATIN(NPCH,NBLK),
     & IPATIN(NPCH,NMATRIX,NBLK),JPATIN(NPCH,NMATRIX,NBLK),
     & KPATIN(NPCH,NMATRIX,NBLK),XPATIN(NPCH,NMATRIX,NBLK),
     & RPATIN(NPCH,NMATRIX,NBLK),RTPATIN(NPCH,NMATRIX,NBLK)
C
C
      COMMON/BKAREAS/
     &AIX(NPM),AIT(NPM),AIR(NPM),
     &AJX(NPM),AJT(NPM),AJR(NPM),
     &AKX(NPM),AKT(NPM),AKR(NPM),
     & VOL(NPM),VOLOR(NPM),
     & WRAIT(NPM),WRAJT(NPM),
     & WRAKT(NPM),
     & AITOT(NPM),AJTOT(NPM),
     & AKTOT(NPM),AREA_MAX(NBLK),VOL_TOTAL(NBLK)
C
      COMMON/BKSTEP/
     & NSTEPS,NSTEP,NCHANGE,NSTEPUP,CFL,STEP(NPM),
     & FMGRID(NBLK),SUPERSTEP(NBLK),FSTEPIN,FMIX,FMIX1,RFMIX,SUPERFAC,
     & NSTEP_ALL
C
      COMMON/BLKSTORE/
     & STORE(NIM,NJM,NKM),STORE1(NIM,NJM,NKM),STORE2(NIM,NJM,NKM),
     & STORE3(NIM,NJM,NKM),AVGPI(NIM,NJM,NKM),AVGPJ(NIM,NJM,NKM),
     & AVGPK(NIM,NJM,NKM),SPAREVAR(NPM),PGRAD(NIM,NJM,NKM)
C
      COMMON/BKTIT/ TITLE
C
      COMMON/BKVIS/ 
     &  XLENGTH(NPM),XFORCE(NPM),
     &  TFORCE(NPM),RFORCE(NPM),
     &  ENSOURCE(NPM),TLENGTH(NPM),
     &  XLLIMM(NBLK),DIFMIN(NBLK),
     &  ILOS,NLOS,NSETVIS,REYNO,VISLAM,XLLIM,YPLUSW,CFWALL,RFVIS,
     &  PRANDTL,ISETVISS,ISETVISE,JSETVISS,JSETVISE,KSETVISS,
     &  KSETVISE,SSETVIS,NSETPOINTS,FREE_TURB(NBLK),XLLIM_FREE(NBLK),
     &  ROV_REF(NBLK),I1_SHEAR(NBLK),IM_SHEAR(NBLK),J1_SHEAR(NBLK),
     &  JM_SHEAR(NBLK),K1_SHEAR(NBLK),KM_SHEAR(NBLK),ITRANS_J1(NBLK),
     &  ITRANS_JM(NBLK),ITRANS_K1(NBLK),ITRANS_KM(NBLK),JTRANS_I1(NBLK),
     &  JTRANS_IM(NBLK),JTRANS_K1(NBLK),JTRANS_KM(NBLK),KTRANS_I1(NBLK),
     &  KTRANS_IM(NBLK),KTRANS_J1(NBLK),KTRANS_JM(NBLK),GAPP(NIM,NJM),
     &  MIXL_TYPE(NBLK)
C
C
      COMMON/BKPATCHIN/
     &   XPIN(NMATRIX),RPIN(NMATRIX),RTPIN(NMATRIX),
     &   IPIN(NMATRIX),JPIN(NMATRIX),KPIN(NMATRIX),
     &   RIPIN(NMATRIX),RJPIN(NMATRIX),RKPIN(NMATRIX)
C
C      LCUSP IS THE MAXIMUM LENGTH OF ANY CUSP
C
      PARAMETER(LCUSP=15)
C
      COMMON/BKCUSP/
     &    IFCUSP(NBLK),ICUSPS(NBLK),ICUSPE(NBLK),
     &    NEXT_CUSP_UP(NBLK),NEXT_CUSP_DN(NBLK),
     &    CUSPMAS_1(LCUSP,NJM,NBLK),CUSPMAS_KM(LCUSP,NJM,NBLK),
     &    CUSP_HO_1(LCUSP,NJM,NBLK),CUSP_HO_KM(LCUSP,NJM,NBLK),
     &    CUSP_VX_1(LCUSP,NJM,NBLK),CUSP_VX_KM(LCUSP,NJM,NBLK),
     &    CUSP_P_1(LCUSP,NJM,NBLK),CUSP_P_KM(LCUSP,NJM,NBLK),
     &    CUSP_RVT_1(LCUSP,NJM,NBLK),CUSP_RVT_KM(LCUSP,NJM,NBLK),
     &    CUSP_VR_1(LCUSP,NJM,NBLK),CUSP_VR_KM(LCUSP,NJM,NBLK),
     &    MARK_CUSP(NPCH,NBLK)
C
      COMMON/BKINDX/
     & N_START_BLCK(NBLK),N_START_I(NJM,NKM,NBLK)

C
C     IF PERFORMING A STEADY CALCULATION MINIMISE THE MEMORY REQUIREMENTS BY USIMG
C     THE FOLLOWING PARAMETER STATEMENT -
C
C      PARAMETER (NBLKDT=1, IMDT = 1, JMDT=1 ,KMDT=1)
C
C     IF PERFORMING AN UNSTEADY CALCULATION THE DIMENSIONS OF THE UNSTEADY
C     VARIABLES MUST BE THE SAME AS THOSE OF THE STEADY VARIABLES. CHANGE THE 
C     FOLLOWING PARAMETER STATEMENT SO THAT:
C             NBLKDT = NBLK , IMDT = NIM , JMDT = NJM ,  KMDT = NKM .
C
C
       PARAMETER (NBLKDT=NBLK, IMDT=NIM, JMDT=NJM ,KMDT=NKM)
C
C
      COMMON/BKDTS/
     & IF_UNST(NBLK), N_INNER_STEPS, NPOINTS_UNST,
     & ROGRPALL(NPM),ROEGRPALL(NPM),
     & ROVXGRPALL(NPM),
     & ROVRGRPALL(NPM),
     & RORVTGRPALL(NPM),
     & ROPHIGRPALL(NPM),
     & RONM1ALL(NPM), 
     & ROENM1ALL(NPM),
     & ROVXNM1ALL(NPM),
     & ROVRNM1ALL(NPM),
     & RORVTNM1ALL(NPM),
     & ROPHINM1ALL(NPM),
     & IF_DTS, TRU_STEP, CLIMDT, NBTSTEP, NBTSTEPS, TIMTOT,
     & DAVGALL, DAVG_UNST, DAVG_UNST_OLD, DTMIN, DTS_CONV,FACSAFE,
     & NDTSPLOTINT, NDTSCYCST, NDTSCYCEND, THSECT


C
C
C
C     NSLIDFACE  is the total number of patches which form part of a sliding interface.
C     NSLIDINT   is the number of points used for interpolation across the sliding
C                interface - i.e. over several blocks and patches.
C     NSLIDNEXT      is the number of patches which may interface with a sliding patch.
C
      PARAMETER (NSLIDFACE=60, NSLIDINT=500, NSLIDNEXT = 6)
C
      COMMON/BKSLIDE/ 
     & NBLKSLIDE(NSLIDFACE),NPCHSLIDE(NSLIDFACE),FRAC_ANN(NSLIDFACE),
     & N_NEXTFACE(NSLIDFACE),NXBLK_SLIDE(NSLIDFACE,NSLIDNEXT),
     & NXPTCH_SLIDE(NSLIDFACE,NSLIDNEXT),NSLIDEFACE,NS_START(NPCH)
C
      COMMON/BKAVG/
     & POAVGI(NIM,NBLK),HOAVGI(NIM,NBLK),FLOWAVGI(NIM,NBLK),
     & ENTAVGI(NIM,NBLK),RVTAVGI(NIM,NBLK)
C
      COMMON/BKCOOL/
     & NCOOL(NBLK),WPUMP,COOL_MAS(NPCH,NBLK),COOL_PO(NPCH,NBLK),
     & COOL_TO(NPCH,NBLK),COOL_MACH(NPCH,NBLK),SANGLE(NPCH,NBLK),
     & XANGLE(NPCH,NBLK),CWLFLOW(MAXJK,MAXJK,NPCH,NBLK),
     & CWLENGY(MAXJK,MAXJK,NPCH,NBLK),CWLXMOM(MAXJK,MAXJK,NPCH,NBLK),
     & CWLANGM(MAXJK,MAXJK,NPCH,NBLK),CWLRMOM(MAXJK,MAXJK,NPCH,NBLK),
     & CWLPHI(MAXJK,MAXJK,NPCH,NBLK),
     & I_CWLTYP(NPCH,NBLK),FRAC_AREA(NPCH,NBLK), WPUMP_START, I_WPUMP,
     & NCOOL_PATCH, NBLEED_PATCH
C
C
      DOUBLE PRECISION  XPIN,RPIN,RTPIN
C
      CHARACTER*1  PATCHTYPE
      CHARACTER*2  NEXTFACE
      CHARACTER*72 TITLE
      CHARACTER*2  NEXT_I, NEXT_J, NEXT_K, NXI,NXJ,NXK
C
C
C
      COMMON/BKPARA_CNTL/
     & STARTTIME,ENDTIME,NBLOCKSALL,
     & IF_PARA,IF_LOG,MYPROC,NPROC,NPROCS,MYBLOCK,
     & NSP_SEND,NSP_PATCH(NSLIDFACE*NSLIDNEXT),
     & NSP_DESTB(NSLIDFACE*NSLIDNEXT),NPOINTS_TOT_PROC(NBLK_ALL),
     & NPOINTS_UNST_PROC(NBLK_ALL),
     & NPOINTS_ALL,NBLKPRC(NBLK_ALL),NBLKLOC(NBLK_ALL),
     & NBLKALL(NBLK_ALL,NBLK_ALL),NPOINTS_UNST_ALL, I_FBLADES
C
      COMMON/BKPARA_PER_PATCH/
     & ROPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & ROVXPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & ROVRPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & RORVTPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & ROEPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & ROPHIPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & VOLPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & XFORPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & TFORPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & RFORPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & ESRCPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & XPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & RPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & RTPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & XLENPATCH(MAXDIM,MAXDIM,NPCH,NBLK),
     & NXPATCHIS(NPCH,NBLK),NXPATCHIE(NPCH,NBLK),
     & NXPATCHJS(NPCH,NBLK),NXPATCHJE(NPCH,NBLK),
     & NXPATCHKS(NPCH,NBLK),NXPATCHKE(NPCH,NBLK),
     & NXPATCHIM(NPCH,NBLK),NXPATCHJM(NPCH,NBLK),
     & NXPATCHKM(NPCH,NBLK),NXNMATCH(NPCH,NBLK),
     & NXPATCH_BLOCK(NPCH,NBLK),NXPATCH_PATCH(NPCH,NBLK),
     & DTYPE_SEND(NPCH,NBLK),DTYPE_RECV(NPCH,NBLK),
     & DTYPE_SEND_CELL(NPCH,NBLK),ID_PATCH(NPCH,NBLK),
     & RREQ_ALL(10*NPCH*NBLK_ALL), SREQ_ALL(10*NPCH*NBLK_ALL),
     & IRREQ_ALL, ISREQ_ALL
C
      COMMON/BKPARA_SLID_PATCH/
     & ROPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & ROVXPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & ROVRPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & RORVTPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & ROEPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & ROPHIPATCHSP(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & SP_THETA(NJM,NKM,NSLIDFACE,NSLIDNEXT),
     & NSP_NXIS(NSLIDFACE,NSLIDNEXT),
     & NSP_NXIE(NSLIDFACE,NSLIDNEXT),
     & NSP_NXJS(NSLIDFACE,NSLIDNEXT),
     & NSP_NXJE(NSLIDFACE,NSLIDNEXT),
     & NSP_NXKS(NSLIDFACE,NSLIDNEXT),
     & NSP_NXKE(NSLIDFACE,NSLIDNEXT),
     & NSP_NXIM(NSLIDFACE,NSLIDNEXT),
     & NSP_NXJM(NSLIDFACE,NSLIDNEXT),
     & NSP_NXKM(NSLIDFACE,NSLIDNEXT),
     & SP_WROT(NSLIDFACE,NSLIDNEXT),
     & DTYPE_RECV_SP(NSLIDFACE,NSLIDNEXT),
     & ID_PATCHSP(NSLIDFACE,NSLIDNEXT)
C	
      COMMON/BKPARA_JDD/
     & IF_INPUT(NBLK_ALL),NPAS_SHIFT(NBLK_ALL),NXBLK_UP(NBLK_ALL),
     & NXBLK_DN(NBLK_ALL),NBLADE_IN(NBLK_ALL),NPASS_MATCH(NPCH,NBLK),
     & N_GEN(NBLK_ALL),N_GEN_ALL(NBLK_ALL),
     & NBLK_IN(NBLK_ALL)
C
C FOR PARALLEL  COMPILATION, KEEP THE FOLLOWIN 'INCLUDE' STATEMENT BUT
C COMMENT-OUT THE NEXT PARAMETER STATEMENT
C
       INTEGER DTYPE_SEND,DTYPE_RECV,DTYPE_SEND_CELL,DTYPE_RECV_SP,
     &  RREQ_ALL, SREQ_ALL, DTYPE_SEND_GEOM
C
C       INCLUDE 'mpif.h'
        PARAMETER (MPI_STATUS_SIZE=4)
