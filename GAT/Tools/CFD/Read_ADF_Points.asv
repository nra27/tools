function [flow_data] = Read_ADF_Points(flow_file,flow_nodes);

%
% [flow_data] = Read_ADF_Points(flow_file,flow_nodes)
%

% Open Solution file(s)
% Non dimensional parameters
rho_ref = 1.226;
p_ref = 101300;
u_ref = sqrt(p_ref/rho_ref);
q_ref = -p_ref^1.5/rho_ref^0.5;

% Initialise ADF parameters
D = ADFI_Declarations;
[D,error_return] = ADF_Set_Error_State(1,D);
    
    [D,solution.root.ID,error_return] = ADF_Database_Open(flow_file,'READ_ONLY','NATIVE',D);
    
    % Read data
    [D,solution.flow.ID,error_return] = ADF_Get_Node_ID(solution.root.ID,'flow',D);
    [D,solution.flow.dim_vals,error_return] = ADF_Get_Dimension_Values(solution.flow.ID,D);
     
    
    
    for k = 1:length(flow_nodes),
        % Set up pointers
        b_start = (flow_nodes(k)-1)*solution.flow.dim_vals(1)+1;
        b_end = (flow_nodes(k)-1)*solution.flow.dim_vals(1)+solution.flow.dim_vals(1);
    
        [D,solution.flow.data(:,k),error_return] = ADF_Read_Block_Data(solution.flow.ID,b_start,b_end,D);      
    end
    
    solution.flow.data = Strip_to_Array(solution.flow.data,solution.flow.dim_vals(1));
    solution.flow.data(:,1) = solution.flow.data(:,1)*rho_ref;
    solution.flow.data(:,2:4) = solution.flow.data(:,2:4)*u_ref;
    solution.flow.data(:,5) = solution.flow.data(:,5)*p_ref;

    flow_data.data_type = {'density' 'u_velocity' 'v_velocity' 'w_velocity' 'pressure' 'spallart'};
    flow_data.flow = solution.flow.data;

    % Close Solution file
    [D,error_return] = ADF_Database_Close(solution.root.ID,D);
